项目说明：
    Java版：

        此项工程为信息提取程序提供正确的数据源，信息提取程序默认编码格式为UTF-8。
        需要对大文件做编码转换和分割
                编码转化：UTF8 -> GB2312
                                  GB2312 -> UTF8
                文件分割：文件内是结构化数据，需要依照数据的结构对文件进行切分


        子文件格式：
                主体是结构化数据
                                正则表达式获取每行是否包含笔录文件编号，在结构体的头部和尾部包含。
                结构化数据格式说明：用逗号做的分隔符，用半角字符” 做的包含处理，在”中的字段作为一个整体

                                正则表达式获取的笔录文件编号需要作为该子文件的文件名？一个结构体作为一个文件。
                                子文件文件格式默认为utf-8，文件后缀名默认为.txt
                                每行默认最多只能有一个“问：”或者“答：”，一个问一个答则需要另起一行，两个问或者两个答及其以上需要记录到错误文件中
                每个结构的头部和尾部的信息需要单做一行，以便二次信息提取。

        结构体尾部的信息包含对文本信息的概括描述，将文件体格式的头部和尾部另起一行。

        非结构数据文件：
                 在结构体与结构体之间需要对非结构数据做保存

        错误文件：
                    文件结构错误，不能构成一问一答形式的。

        注意点：子文件名为笔录编码.txt  字符编码为utf-8  正则表达式不一定具备普适性

    Python版：

        xlsx -> csv
        csv -> xlsx

    正确率统计：（此模块由Python版提供数据支持，Java操作繁琐）
        以笔录编号作为key，比较其余几项的值是否相等，统计结果应该包含单项正确率和总正确率，由于存在识别不完全，
        因此，实际结果应该比测试所得结果高。